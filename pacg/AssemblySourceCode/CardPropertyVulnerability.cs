using System;
using UnityEngine;

public class CardPropertyVulnerability : CardProperty
{
    [Tooltip("dice to add")]
    public DiceType Dice;
    [Tooltip("attacking trait that we're vulnerable too")]
    public TraitType Trait;

    public void Apply()
    {
        int num = Turn.CheckBoard.Get<int>("VulnerabilityDiceAdded");
        if (Turn.DamageTraits.Contains(this.Trait))
        {
            if (num <= 0)
            {
                DiceType diceType = this.GetDiceType(Turn.Check, this.Dice);
                Turn.CheckBoard.Set<int>("VulnerabilityDiceAdded", (int) diceType);
                Turn.Dice.Add(diceType);
            }
        }
        else if (num > 0)
        {
            DiceType item = (DiceType) num;
            Turn.CheckBoard.Set<int>("VulnerabilityDiceAdded", 0);
            Turn.Dice.Remove(item);
        }
    }

    private DiceType GetDiceType(SkillCheckType check, DiceType dice)
    {
        if (dice != DiceType.D0)
        {
            return dice;
        }
        dice = Turn.Owner.GetSkillDice(check);
        if (dice != DiceType.D0)
        {
            return dice;
        }
        if (Turn.Dice.Count > 0)
        {
            return Turn.Dice[0];
        }
        return DiceType.D0;
    }
}

